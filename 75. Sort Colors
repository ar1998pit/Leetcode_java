https://leetcode.com/problems/sort-colors/

class Solution {
    public void sortColors(int[] nums) {
        //Dutch National Flag algorithm
        // 3 - pointers
        //low,mid,high pointers
        //a[0...low-1] --> 0
        //a[high+1...] --> 2
        //a[low..mid-1]--> 1
        //space com ---> O(N)
        int lo =0;
        int hi = nums.length-1;
        int mid= 0;
        int temp;
        while (mid<=hi){
            switch(nums[mid]){
                case 0:{
                    temp = nums[lo];
                    nums[lo]=nums[mid];
                    nums[mid]=temp;
                    lo++;
                    mid++;
                    break;
                }
                case 1:
                    mid++;
                    break;
                case 2:{
                    temp = nums[mid];
                    nums[mid] = nums[hi];
                    nums[hi]=temp;
                    hi--;
                    break;
                }
            }
        }
    }
}

___________________________________________________________

Two-pointer solution 
 _______________________________________________
 
 
class Solution {
    public void sortColors(int[] nums) {

	int zeroIndex = 0, twoIndex = nums.length - 1, i = 0;
	while( i <= twoIndex ) {
		if( nums[i] == 0 ) 
			swap(nums, zeroIndex++, i++);
		else if( nums[i] == 2)
			swap(nums, twoIndex--, i);    
		else
			i++;
	}
}

public void swap(int[] nums, int i, int j) {
	int temp = nums[i];
	nums[i] = nums[j];
	nums[j] = temp;
}
    }
