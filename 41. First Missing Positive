Given an unsorted integer array, find the smallest missing positive integer.

Example 1:

Input: [1,2,0]
Output: 3
Example 2:

Input: [3,4,-1,1]
Output: 2
Example 3:

Input: [7,8,9,11,12]
Output: 1
Follow up:

Your algorithm should run in O(n) time and uses constant extra space.

class Solution {
    public int firstMissingPositive(int[] nums) {
        int n = nums.length;
        int correctPos;
        for(int i=0;i<n;i++){
            correctPos = nums[i]-1;
            while (((1<=nums[i])&&(nums[i]<=n))&&(nums[i] != nums[correctPos])){
                int temp=nums[i];
                nums[i]=nums[correctPos];
                nums[correctPos]=temp;
                correctPos=nums[i]-1;
        }
                   
}
                   for(int i =0;i<n;i++){
                       if (i+1 != nums[i]){
                           return i+1;
                       }
                   }
        return n+1;
    }
}
